import pygame
import random
import sys

# Initialize pygame
pygame.init()

# Screen dimensions
WIDTH = 400
HEIGHT = 600
FPS = 60

# Colors
WHITE = (255, 255, 255)
BLUE = (135, 206, 250)
GREEN = (0, 200, 0)
BROWN = (150, 75, 0)

# Bird properties
BIRD_WIDTH = 40
BIRD_HEIGHT = 30
GRAVITY = 0.5
FLAP_STRENGTH = -10

# Pipe properties
PIPE_WIDTH = 70
PIPE_GAP = 150
PIPE_SPEED = 3

# Set up display
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Flappy Bird")
clock = pygame.time.Clock()
font = pygame.font.SysFont(None, 40)

# Bird class
class Bird:
    def __init__(self):
        self.x = 60
        self.y = HEIGHT // 2
        self.velocity = 0

    def update(self):
        self.velocity += GRAVITY
        self.y += self.velocity

    def flap(self):
        self.velocity = FLAP_STRENGTH

    def draw(self):
        pygame.draw.rect(screen, BROWN, (self.x, self.y, BIRD_WIDTH, BIRD_HEIGHT))

    def get_rect(self):
        return pygame.Rect(self.x, self.y, BIRD_WIDTH, BIRD_HEIGHT)

# Pipe class
class Pipe:
    def __init__(self):
        self.x = WIDTH
        self.height = random.randint(100, 400)

    def update(self):
        self.x -= PIPE_SPEED

    def draw(self):
        pygame.draw.rect(screen, GREEN, (self.x, 0, PIPE_WIDTH, self.height))
        pygame.draw.rect(screen, GREEN, (self.x, self.height + PIPE_GAP, PIPE_WIDTH, HEIGHT))

    def collides_with(self, bird_rect):
        top_pipe = pygame.Rect(self.x, 0, PIPE_WIDTH, self.height)
        bottom_pipe = pygame.Rect(self.x, self.height + PIPE_GAP, PIPE_WIDTH, HEIGHT)
        return bird_rect.colliderect(top_pipe) or bird_rect.colliderect(bottom_pipe)

# Game loop
def main():
    bird = Bird()
    pipes = []
    score = 0
    frame_count = 0

    running = True
    while running:
        clock.tick(FPS)
        screen.fill(BLUE)

        # Event handling
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
                bird.flap()

        # Update bird
        bird.update()

        # Add new pipes
        if frame_count % 90 == 0:
            pipes.append(Pipe())

        # Update pipes
        for pipe in pipes[:]:
            pipe.update()
            if pipe.x + PIPE_WIDTH < 0:
                pipes.remove(pipe)
                score += 1

        # Draw everything
        bird.draw()
        for pipe in pipes:
            pipe.draw()

        # Check collisions
        bird_rect = bird.get_rect()
        if bird.y > HEIGHT or bird.y < 0 or any(pipe.collides_with(bird_rect) for pipe in pipes):
            running = False  # Game Over

        # Draw score
        score_surface = font.render(f"Score: {score}", True, WHITE)
        screen.blit(score_surface, (10, 10))

        pygame.display.flip()
        frame_count += 1

    # Game over screen
    screen.fill(BLUE)
    msg = font.render("Game Over!", True, WHITE)
    screen.blit(msg, (WIDTH//2 - msg.get_width()//2, HEIGHT//2 - msg.get_height()//2))
    pygame.display.flip()
    pygame.time.wait(2000)

    pygame.quit()
    sys.exit()

if __name__ == "__main__":
    main()
